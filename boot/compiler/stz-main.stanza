defpackage stz/main :
   import core
   import stz/compiler
   import stz/arg-parser
   import stz/params

defn compile (parsed:ParseResult) :
   val files = args(parsed)
   val output = single(parsed, "s")
   add-flag(`OPTIMIZE) when has-flag?(parsed, "optimize")
   compile(files, output)

defn main () :
   val compile-comm = Command("compile", [SingleFlag("s"), MarkerFlag("optimize")])
   val comms = [compile-comm]
   try :
      val parsed = parse-args(comms, compile-comm, command-line-arguments()[1 to false])
      switch {command(parsed) == _} :
         "compile" : compile(parsed)
   catch (e:Exception) :
      println(e)
      false

main()