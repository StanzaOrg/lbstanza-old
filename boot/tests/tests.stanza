defpackage user :
   import core
   import reader
   import macro-utils

   import stz/algorithms
   import stz/parser
   import stz/input
   import stz/renamer

defn header (msg:String) :
   val l = length(msg)
   val n1 = 30 - 1 - (l / 2)
   val n2 = 60 - (n1 + 2 + l)
   println("\n\n\n")
   println(String(60, '='))
   println-all([String(n1, '='), ' ', msg, ' ', String(n2, '=')])
   println(String(60, '='))
   

defn test-reader () :
   header("Form")
   val form = read-file("data.txt")   
   println(form)

   header("Expanded")
   val expanded = with-syntax(core) :
      match-syntax(List(form)) :
         (?e:#exp) : e
   println(expanded)      

   header("Input")
   val input = read-prog(expanded)
   println(input)

   header("Check")
   check(input)

   header("Renamer")
   val [namemap, renamed] = rename(input)
   println(renamed)

test-reader()