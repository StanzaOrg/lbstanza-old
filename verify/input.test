($begin

($package a)

($deftype a (a b) ($none))

;($deftype x)
;($deftype a (a b) ($none))
;($deftype a (a b) ($and ($none) a))
;($deftype a () ($of a))
;($deftype a () ($of a ($and a b)))
;($deftype a () ($of a ($or a b)))
;($deftype a () ($of a ($-> a b)))
;($deftype a () ($of a ($-> (a b) b)))
;($deftype a () ($of a ($?)))
;($deftype a () ($of a ($void)))
;($deftype a () ($of a ($cap x)))
;($deftype a () ($of a ($cap (x))))
;($deftype a () ($cap (x)))
;($import ($of))
;($import ($of a)
;   ($prefix st/)
;   ($prefix st- 3)
;   ($prefix-of a 10)
;   ($prefix-of))
;($import ($of a)
;   ($prefix st/)
;   ($prefix st-)
;   ($prefix-of (a) A))
;($import A
;   ($prefix st/)
;   ($prefix st-)
;   ($prefix-of (a) A))
;($begin
;   ($package a
;      ($import b
;         ($prefix p)
;         ($prefix-of (a b c) p2))
;      ($import c
;         ($prefix-of (a b c) p2))
;      ($package d))
;   ($package a
;      ($import b
;         ($prefix p)
;         ($prefix-of (a b c) p2))
;      ($import c
;         ($prefix-of (a b c) p2))
;      ($package d))
;   ($export
;      ($begin
;         ($deftype a () ($of a ($cap x)))
;         ($package d))))
;
($defmulti f (a c ($cap b)) (($-> (($of a)) ($cap d))) b)
($defn f () (a b) ($none) (x y)
   ($begin
      ($def x ($none) 3)
      ($do x)
      y))

($defmethod f () (a b) ($none) (x y)
   x)
)