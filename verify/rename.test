defrenamers :
   custom te (e:IExp) :
      rename-e(flatten-te(e))
   
   custom se (e:IExp) :
      rename-e(flatten-se(e))

   custom c+ (e:IExp) :
      body
   custom t+ (e:IExp) :
      body
   custom l+ (e:IExp) :
      body
   custom v+ (e:IExp) :
      body
   custom m+ (e:IExp) :
      body
   custom f+ (e:IExp) :
      body
   
   e(rename-e) :
      IDefType : (class:c+, {args:t+}, parent:?, info:?)
      IDef : (name:l+, type:?, value:e, info:?)
      IDefVar : (name:v+, type:?, value:e, info:?)
      IDefn : (tail?:?, name:f+, {targs:t+, a1:t, a2:?, args:l+, body:se}, info:?)
      IDefmulti : (name:m+, {targs:t+, a1:t}, a2:?, info:?)
      IDefmethod : (tail?:?, multi:?, thisn:?, {targs:t+, a1:t, a2:?, args:l+, body:se}, info:?)
      IFn : (tail?:?, a1:?, a2:?, {args:l+, body:se}, info:?)
      IBranch : (types:?, {args:l+, body:se}, info:?)
      IDo : (func:f, args:e, info:?)
      INew : (class:?, methods:e, info:?)
      ICast : (exp:e, type:?, info:?)
      ISet : (name:?, value:e, info:?)
      IPrim : (function:?, args:e, info:?)
      ICallLS : (function:?, args:e, info:?)
      LetRec : (group{defns:e}, body:e, info:?)
      IExport : (public{exp:e}, info:?)
      
      ILSDefStruct : (name:c+, parents:?, types:?, rtypes:?, fields:?, rfield:?, info:?)
      ILSExtern : (name:v+, type:?, info:?)
      ILSExternFn : (name:f+, type:?, info:?)
      ILSDefn : (name:f+, a1:?, a2:?, {args:v+, body:e}, info:?)   
      ILSDef : (name:v+, type:?, exp:?, info:?)
      ILSBegin : (comms:e, info:?)
      ILSTCall : (_:?)
      ILSSet : (_:?)
      ILSLabel : (_:?)
      ILSGoto : (_:?)
      ILSReturn : (_:?)
      ILSLet : (comm:e, info:?)
      ILSIf : (pred:?, conseq:e, alt:e, info:?)   
      ILSMatch : (exp:?, branches:e, info:?)
      ILSBranch : (types:?, body:e, info:?)
      ILSDo : (_:?)
      ILSCallC : (_:?)
   
      IExp : (_:e)
   
   t :
      IOf : (class:?, args:t, info:?)
      IAnd : (a:t, b:t, info:?)
      IOr : (a:t, b:t, info:?)
      IArrow : (a1:?, a2:t)
      ICap : (name:t+, info:?)
      IExp : (_:?)
      
   f :
      IOf : (class:e, args:?, info:?)
      IExp : goto e