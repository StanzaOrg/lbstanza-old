defrenamer rename-exp (e:IExp, eng:Engine) :
   e :
      IDefType : (class:c+, {args:t+})
      IDef : (name:v+, value:e)            
      IDefVar : (name:mv+, value:e)
      IDefn : (name:f+, {targs:t+, args:v+, body:se})
      IDefmulti : (name:m+, {targs:t+})
      IDefmethod : ({targs:t+, args:v+, body:se})
      IFn : ({args:v+, body:se})
      IBranch : ({args:v+, body:se})
      IDo : (func:f, args:e)
      INew : (methods:e)
      ICast : (exp:e)
      ISet : (value:e)
      IPrim : (args:e)
      ICallLS : (args:e)
      LetRec : (group{defns:e}, body:e)
      IPublic : (public{exp:e})
      IProtected : (protected{exp:e})

      ILSDefStruct : (name:c+)
      ILSExtern : (name:mv+)
      ILSExternFn : (name:f+)
      ILSDefn : (name:f+, {args:mv+, body:e})
      ILSDef : (name:mv+)
      ILSTCall : ()
      ILSSet : ()
      ILSLabel : ()
      ILSGoto : ()
      ILSReturn : ()
      ILSIf : (conseq:e, alt:e)
      ILSMatch : (branches:e)
      ILSBranch : ({exp:mv+, body:e})
      ILSDo : ()
      ILSCallC : ()
      
      IExp : (_:e)

   se :
      IExp :
         custom{flatten-se(e)}
         goto e

   f :
      IOf : (class:e)
      IExp : goto e

   mv+ :
      IVar : register mutable-var
      ILSVar : register ls-mutable-var      
   v+ :
      IVar : register var
      ITuple : (_:v+)      
   t+ :
      IVar : register tvar
      ICap : (name:cv+)
   cv+ :
      IVar : register capvar
   c+ :
      IVar : register class
   m+ :
      IVar : register multi
   f+ :
      IVar : register fn
      ILSVar : register ls-fn
