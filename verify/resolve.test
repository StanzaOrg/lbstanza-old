defresolver resolve-exp (e:IExp, eng:Engine) :
   structure :
      IExport (exp, info)
      IDefType (class, args, parent, info)
      IDef (name, type, value, info)
      IDefVar (name, type, value, info)
      IDefn (tail?, name, targs, a1, a2, args, body, info)
      IDefmulti (name, targs, a1, a2, info)
      IDefmethod (tail?, multi, thisn, targs, a1, a2, args, body, info)
      IFn (tail?, a1, a2, args, body, info)
      IMulti (funcs, info)
      IBegin (exps, info)
      IMatch (args, branches, info)
      IBranch (types, args, body, info)
      INew (class, methods, info)
      IVar (name, info)
      ICast (exp, type, info)
      ISet (name, value, info)
      IDo (func, args, info)
      IPrim (function, args, info)
      ICallLS (function, args, info)
      ILiteral (value, info)
      ITuple (exps, info)
      IOf (class, args, info)
      IAnd (a, b, , info)
      IOr (a, b, info)
      IArrow (a1, a2, info)
      ICap (name, info)
      IGradual (info)
      IVoid (info)
      INone (info)
      ILSVar (name, info)
      ILSRef (name, args, info)
      ILSRefArray (name, length, args, info)
      ILSStruct (name, args, info)
      ILSPtr (exp, info)
      ILSDeref (exp, info)
      ILSSlot (exp, index, info)
      ILSField (exp, name, info)
      ILSDo (func, args, info)
      ILSCallC (func, args, info)
      ILSPrim (op, args, info)
      ILSSizeof (type, info)
      ILSTagof (name, info)
      ILSAs (exp, type, info)
      ILSSignedCast (exp, type, info)
      ILSUnsignedCast (exp, type, info)
      ILSValue (value, type, info)
      ILSAnd (a, b, info)
      ILSOr (a, b, info)
      ILSTCall (exp, info)
      ILSSet (exp, value, info)
      ILSLabel (name, info)
      ILSGoto (name, info)
      ILSReturn (exp, info)
      ILSLet (comm, info)
      ILSIf (pred, conseq, alt, info)
      ILSBegin (comms, info)
      ILSMatch (exp, branches, info)
      ILSBranch (exp, type, body, info)
      ILSDef (name, type, exp, info)
      ILSDefStruct (name, parents, types, rtype, fields, rfield, info)
      ILSExtern (name, type, info)
      ILSExternFn (name, type, info)
      ILSDefn (name, a1, a2, args, body, info)
      ILSByteT (info)
      ILSIntT (info)
      ILSLongT (info)
      ILSFloatT (info)
      ILSDoubleT (info)
      ILSUnknownT (info)
      ILSPtrT (type, info)
      ILSRefT (type, info)
      ILSFnT (a1, ar, a2, info)
      ILSIntrinsic (name, args, info)
      VarN (n, info)
      LSVarN (n, info)
      Let (def, body, info)
      LetRec (defns, body, info)
      LetPackage (name, imports, body, info)

   define f+ :
      IDefn : (name:+)

   resolve te :
      IBegin : (exps:te)
      IDefType : ({args:+, parent:t})
      IDef : (type:t, value:e)
      IDefVar : (type:t, value:e)
      IDefn : ({targs:+, args:+, a1:t, a2:t, body:e})
      IDefmulti : ({targs:+, a1:t, a2:t})
      IDefmethod : (multi:m, {targs:+, args:+, a1:t, a2:t, body:e})
      IExport : (exp:te)
      + e

   resolve e :
      IDef : (value:e, type:t, name:+)
      IDefVar : (value:e, type:t, name:+)
      LetRec : {defns:f+, defns:f, body:e}
      IFn : (a1:t, a2:t, {args:+, body:e})
      IBranch : (types:t {args:+, body:e})
      INew : (class:t, methods:dm)
      ICast : (exp:e, type:t)
      ISet : (name:v, value:e)
      IDo : (func:fa, args:e)
;      ICallLS : (function:lfa, args:e)
      IPrim : (args:e)
      IVar : resolve var
      IExp : (_:e)

   resolve f :
      IDefn : ({targs:+, args:+, a1:t, a2:t, body:e})

   resolve t :
      IVar : resolve tvar
      IOf : (class:c, args:t)
      IExp : (_:t)

   resolve c :
      IVar : resolve class

   resolve fa :
      IOf : (class:e, args:t)
      + e

   resolve dm :
      IDefmethod : (multi:m, {targs:+, args:+, a1:t, a2:t, thisn:this, body:e})

   resolve m :
      IVar : resolve multi

   resolve this ((Int|False)) :
      (Int|False) : resolve this

   resolve v :
      IVar : resolve mutable-var

;   resolve lfa :
;      IOf : (class:le, args:t)
;      + le