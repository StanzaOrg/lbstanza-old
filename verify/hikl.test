program callc :
   ($extern 0 ($fn (int) int) _print_int)
   ($init
      ($call-c int 0 ($int 42)))

program def :
   ($extern 0 ($fn (int) int) _print_int)
   ($def 1 ($value 32))
   ($init
      ($call-c int 0 ($var 1)))

program lsdefn :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($lsdefn 1 () () long
       ($call-c int 0 ($string "Variable Uninitialized.\n"))
       ($return ($long 0)))

   ($init
      ($call long 1 ()))

program voidcheck :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn $variable-uninitialized-error () () long
       ($call-c int 0 ($string "Variable Uninitialized.\n"))
       ($call-c int 2 ($long -1))
       ($return ($long 0)))

   ($defvar 1000)
   ($def 1001 ($var 1000))

program fn :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn 4 () () ($ref top)
      ($call-c int 0 ($string "Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn $arity-error () () ($ref top)
      ($call-c int 0 ($string "Arity Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($defn 3 () () top
      ($do top ($var 4) ()))

   ($do top ($var 3) ())
   ($do top ($var 3) () ($value 0) : top) ;Arity Error

program multifn :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn 4 () () ($ref top)
      ($call-c int 0 ($string "Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn 5 () () ($ref top)
      ($call-c int 0 ($string "Other Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn $arity-error () () ($ref top)
      ($call-c int 0 ($string "Arity Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($defmultifn 3
      (() top
       ($do top ($var 4) ()))
      ((100:top) top
       ($do top ($var 5) ()))
      ((101:top 102:top) top
       ($do top ($var 4) ())
       ($do top ($var 5) ()))
      ((103:top 104:top 105:top) top
       ($do top ($var 5) ())
       ($do top ($var 4) ())))

   ($do top ($var 3) ())
   ($do top ($var 3) () ($value 0):top)
   ($do top ($var 3) () ($value 0):top ($value 1):top)
   ($do top ($var 3) () ($value 0):top ($value 1):top ($value 2):top)
   ($do top ($var 3) () ($value 0):top ($value 1):top ($value 2):top ($value 3):top) ;Arity Error
   

program one-method :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn 4 () () ($ref top)
      ($call-c int 0 ($string "Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn 5 () () ($ref top)
      ($call-c int 0 ($string "Other Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn $arity-error () () ($ref top)
      ($call-c int 0 ($string "Arity Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($defmulti 3 () (top top) top)
   ($defmethod 3 () false
      () (100:top 101:top) top
      ($do top ($var 4) ()))

   ($do top ($var 3) () ($value 0):top ($value 1):top)


program types :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn 4 () () ($ref top)
      ($call-c int 0 ($string "Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn 5 () () ($ref top)
      ($call-c int 0 ($string "Other Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn $arity-error () () ($ref top)
      ($call-c int 0 ($string "Arity Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($lsdefn $cast-error () () ($ref top)
      ($call-c int 0 ($string "Cast Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($deftype 1000)
   ($deftype 1001 ($of 1000))
   ($deftype 1002)

   ($defn 3 () (100:($of 1000)) top
      ($do top ($var 4) ()))
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000))
   ($do top ($var 3) () ($new ($of 1001)) : ($of 1001))
   ($do top ($var 3) () ($new ($of 1002)) : ($of 1002))


program two-methods :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn 4 () () ($ref top)
      ($call-c int 0 ($string "Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn 5 () () ($ref top)
      ($call-c int 0 ($string "Other Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn $arity-error () () ($ref top)
      ($call-c int 0 ($string "Arity Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($lsdefn $cast-error () () ($ref top)
      ($call-c int 0 ($string "Cast Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($deftype 1000)
   ($deftype 1001 ($of 1000))
   ($deftype 1002)

   ($defmulti 3 () (top top) top)
   ($defmethod 3 () false
      () (100:top 101:top) top
      ($do top ($var 4) ()))
   ($defmethod 3 () false
      () (102:($of 1000) 103:($of 1000)) top
      ($do top ($var 5) ()))

   ($do top ($var 3) () ($value 0):top ($value 1):top)
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000) ($new ($of 1000)) : ($of 1000))
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000) ($new ($of 1001)) : ($of 1001))
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000) ($new ($of 1002)) : ($of 1002))

program instance-methods :
   ($extern 0 ($fn (($ptr byte)) ? int) _printf)
   ($extern 2 ($fn (long) int) _exit)

   ($lsdefn 4 () () ($ref top)
      ($call-c int 0 ($string "Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn 5 () () ($ref top)
      ($call-c int 0 ($string "Other Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn 6 () () ($ref top)
      ($call-c int 0 ($string "Really Random Message.\n"))
      ($return ($long 0)))

   ($lsdefn $arity-error () () ($ref top)
      ($call-c int 0 ($string "Arity Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($lsdefn $cast-error () () ($ref top)
      ($call-c int 0 ($string "Cast Error.\n"))
      ($call-c int 2 ($long -1))
      ($return ($long 0)))

   ($lsdefn $variable-uninitialized-error () () long
       ($call-c int 0 ($string "Variable Uninitialized.\n"))
       ($call-c int 2 ($long -1))
       ($return ($long 0)))

   ($defn 7 () () top
      ($new ($of 1000)
         ($defmethod 3 () 900
           () (900:top 104:($of 1000)) top
           ($do top ($var 6) ()))))
      

   ($deftype 1000)
   ($deftype 1001 ($of 1000))
   ($deftype 1002)

   ($defmulti 3 () (top top) top)
   ($defmethod 3 () false
      () (100:top 101:top) top
      ($do top ($var 4) ()))
   ($defmethod 3 () false
      () (102:($of 1000) 103:($of 1000)) top
      ($do top ($var 5) ()))

   ($def 10 ($do top ($var 7) ()))
   ($do top ($var 3) () ($value 0):top ($value 1):top)
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000) ($new ($of 1000)) : ($of 1000))
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000) ($new ($of 1001)) : ($of 1001))
   ($do top ($var 3) () ($new ($of 1000)) : ($of 1000) ($new ($of 1002)) : ($of 1002))
   ($do top ($var 3) () ($var 10) : ($of 1000) ($new ($of 1002)) : ($of 1002))
   ($do top ($var 3) () ($var 10) : ($of 1000) ($new ($of 1000)) : ($of 1000))
   ($do top ($var 3) () ($var 10) : ($of 1000) ($var 10) : ($of 1000))