defpackage stz/standard-proj-env :
  import core
  import collections
  import stz/foreign-package-manager
  import stz/utils
  import stz/proj-env
  import stz/proj-ir

;A standard ProjEnv that connects to the currently registered
;foreign package managers.
public deftype StandardProjEnv <: ProjEnv

;Retrieve the package manager with the given name.
public defmulti package-manager (env:StandardProjEnv, name:Symbol) -> ForeignPackageManager

;This function implements a ProjEnv that connects to the
;currently registered foreign package managers.
public defn StandardProjEnv (workdir:String) -> StandardProjEnv :
  ;Create table of all registered package managers.
  val package-manager-table = to-hashtable(name,
    registered-foreign-package-managers())
    
  ;Collect info about all package managers.
  val pm-infos = to-tuple $
    seq(collect-info, values(package-manager-table))

  new StandardProjEnv :
    ;Return the current working directory.
    defmethod workdir (this) :
      workdir

    ;Return information about all registered package managers.
    defmethod foreign-package-managers (this) :
      pm-infos

    ;Return the list of induced system variables provided by the package manager.
    defmethod package-manager-variables (this, params:ForeignPackageParamsStmt, platform:Symbol, link-type:Symbol) :
      val pm = package-manager-table[package-manager(params)]
      proj-variables(pm, to-params(params,platform,link-type), platform)

    ;Retrieve the package manager with the given name.
    defmethod package-manager (this, name:Symbol) :
      package-manager-table[name]

;Resolve . to retrieve the working directory.
public defn StandardProjEnv () -> StandardProjEnv :
  StandardProjEnv(resolve-path!("."))

;Collect the info of a foreign package manager for communication
;with proj reader.
defn collect-info (pm:ForeignPackageManager) -> ForeignPackageManagerInfo :
  ForeignPackageManagerInfo(name(pm), configuration-params(pm))

;Helper: Translate ProjIR statement into PackageManagerParams
public defn to-params (params:ForeignPackageParamsStmt,
                       platform:Symbol, link-type:Symbol) -> PackageManagerParams :
  PackageManagerParams(projdir(params),
                       platform,
                       link-type,
                       entries(params))