defpackage stz/infer :
   import core
   import verse
   import stz/tl-ir

;============================================================
;================= Constraint Language ======================
;============================================================

definterface Constraint
defstruct FlowConstraint <: Constraint :
   n: Int
   a: Type
   b: Type

defstruct SuperConstraint <: Constraint :
   n: Int
   type: Type

defstruct MixConstraint <: Constraint :
   n: Int
   sel: List<Int>
   xs: List<Type>
   y: Type

defstruct CallMixConstraint <: Constraint :
   n: Int
   sel: List<Int>
   xs: List<Type>
   ys: List<Type>

defstruct SubConstraint <: Constraint :
   n: Int
   x: Type
   env: List<KeyValue<Int, Type>>

defstruct EqualConstraint <: Constraint :
   n: Int
   type: Type

#with-overlay(stz/printer-lang) :
   defprinter (c:Constraint) :
      FlowConstraint :
         ($flow n a b)
      SuperConstraint :
         ($super n type)
      MixConstraint :
         ($mix (sel ...) (xs ...) y)
      CallMixConstraint :
         ($callmix (sel ...) (xs ...) (ys ...))
      SubConstraint :
         ($sub n x env ...)
      EqualConstraint :
         ($equal n type)