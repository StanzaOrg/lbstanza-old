defpackage stz/infer :
   import core
   import verse
   import stz/tl-ir

;============================================================
;================= Constraint Language ======================
;============================================================

public definterface Constraint
public defstruct FlowConstraint <: Constraint :
   n: Int
   a: Type
   b: Type

public defstruct SuperConstraint <: Constraint :
   n: Int
   type: Type

public defstruct MixConstraint <: Constraint :
   n: Int
   sel: Int
   xs: List<Type>

public defstruct SelConstraint <: Constraint :
   n: Int
   xs: List<Type>
   y: Type

public defstruct ThresholdConstraint <: Constraint :
   n: Int
   s: Int

public defstruct SubConstraint <: Constraint :
   n: Int
   x: Type
   env: List<KeyValue<Int, Type>>

public defstruct EqualConstraint <: Constraint :
   n: Int
   type: Type

#with-overlay(stz/printer-lang) :
   defprinter (c:Constraint) :
      FlowConstraint :
         ($flow n a b)
      SuperConstraint :
         ($super n type)
      MixConstraint :
         ($mix n sel (xs ...))
      SelConstraint :
         ($sel n xs y)
      ThresholdConstraint :
         ($threshold n s)
      SubConstraint :
         ($sub n x env ...)
      EqualConstraint :
         ($equal n type)