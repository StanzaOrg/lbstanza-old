defpackage stz/earley-eval-result :
  import core
  import collections

;============================================================
;====================== Definitions =========================
;============================================================

public defstruct ParseNode :
  range: ParsedRange
  children: Tuple<ParseNode|False>

public deftype ParsedResult
public defmulti get (r:ParsedResult, i:Int) -> ?
public defmulti info (r:ParsedResult) -> FileInfo|False
public defmulti form (r:ParsedResult) -> List
public defn default-action (r:ParsedResult) : false

;============================================================
;====================== RangeTable ==========================
;============================================================

public defstruct ParsedRange <: Equalable&Hashable :
  rule: Int
  start: Int
  end: Int
with:
  printer => true

defmethod equal? (a:ParsedRange, b:ParsedRange) :
  rule(a) == rule(b) and
  start(a) == start(b) and
  end(a) == end(b)

defmethod hash (a:ParsedRange) :
  hash(rule(a)) + 7 * hash(start(a)) + 11 * hash(end(a))

public defn length (r:ParsedRange) :
  end(r) - start(r)