defpackage stz/test-reg-alloc-reader :
  import core
  import collections
  import stz/reg-alloc-reader
  import stz/reg-alloc-errors
  import stz/reg-alloc-blocks
  import stz/reg-alloc-engine
  import stz/reg-alloc-liveness

defn main () :
  val filename = command-line-arguments()[1]
  val forms = reader/read-file(filename)
  val [prog, models] = match-syntax[reg-alloc-ir](forms) :
    (?prog:#prog
     ?models:#model! ...) :
      [prog, models]
    (_ ...) :
      throw(RegAllocSyntaxError(false, "Invalid file."))
  println(prog)
  do(println, models)

  val engine = RegAllocEngine(prog)
  println("\n\n=== Engine ===")
  println(engine)

  println("\n\n==== Analyze Basic Blocks =====")
  analyze-basic-blocks(engine)
  println(engine)

  println("\n\n==== Compute Liveness =====")
  compute-live(engine)
  println(engine)
    

set-command-line-arguments(["test-reader", "testdata/reg-alloc-ex1.ir"])
main()