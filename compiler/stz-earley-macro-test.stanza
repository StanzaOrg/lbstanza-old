defpackage stz/earley-macro-test :
  import core
  import collections
  import reader
  import stz/earley-macros
  import stz/core-macros

defsyntax earley-test-syntax :
  import exp from core
  import (syntax-package,
          match-syntax-exp,
          parse-syntax-exp) from stanza-earley
  defrule exp = (?e:#match-syntax-exp) :
    compile(e,true)
;  defrule exp = (?e:#parse-syntax-exp) :
;    compile(e,true)
  defrule exp = (?e:#syntax-package) :
    compile(e,true)

defn main () :
  val forms = read-file("tests/earley.stanza")
  val parsed = parse-syntax[core / #exp! ...](forms)
  spit("temporary.stanza", parsed)
  call-system("stanza", ["stanza" "run" "compiler/stanza.proj" "temporary.stanza"])

main()