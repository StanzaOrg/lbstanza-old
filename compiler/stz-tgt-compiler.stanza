defpackage stz/tgt-compiler :
   import core
   import collections
   import stz/tgt-ir with :
      prefix(Ins) => T
   import stz/asm-ir
   import stz/tgt-writer
   import stz/backend
   import stz/bb
   
defn compile-tgt (defns:List<DefFn>) :      
   val output = Vector<Ins>()
   defn flush-output () :
      do(println, output)
      clear(output)

   val info-table = Vector<KeyValue<Int,FileInfo>>()

   val backend = X86Backend()

   for def in defns do :
      compile(def, backend, output, info-table)
      flush-output()

defn main () :
   val filename = command-line-arguments()[1]
   compile-tgt(deserialize-defns(filename))

main()
