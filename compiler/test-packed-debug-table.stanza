defpackage stz/test-packed-debug-table :
  import core
  import collections
  import stz/packed-debug-table

defn DummyPacker () :
  val label-counter = to-seq(1 to false)
  new StaticPacker :
    defmethod make-label (this) :
      next(label-counter)
    defmethod emit-comment (this, str:String) :
      println("//%_" % [str])
    defmethod emit-label (this, id:Int) :
      println("L%_:" % [id])
    defmethod emit-pointer-to-label (this, id:Int) :
      println("  .label L%_" % [id])
    defmethod emit (this, x:Long) :
      println("  .long %_" % [x])
    defmethod emit (this, s:String) :
      println("  .string %~" % [s])

defn table1 () :
  DebugTable $ [
    PackageDebugInfo("mypackage",
      [DebugEntry("GLOBAL-A", VarLabel(100))])
    PackageDebugInfo("core",
      [DebugEntry("GLOBAL-B", VarLabel(101))])
    PackageDebugInfo("collections",
      [DebugEntry("GLOBAL-C", VarLabel(102))
       DebugEntry("GLOBAL-D", VarLabel(103))
       DebugEntry("GLOBAL-E", VarLabel(104))])
    PackageDebugInfo("empty", [])]

defn main () :
  pack(DummyPacker(), table1())

main()