defpackage stz/reg-alloc-model-analysis :
  import core
  import collections
  import stz/reg-alloc-ir
  import stz/reg-alloc-engine

;Analyze the given operation models.
public defn analyze-models (models:Tuple<OperationModel>)
                         -> Vector<ModelProperties> :
  to-vector<ModelProperties>(seq(analyze, models))

;Analyze a single operation model.
defn analyze (m:OperationModel) -> ModelProperties :
  val returns? = any?({_ is Return}, stmts(m))
  val clears-registers? = any?({_ is ClearRegisters}, stmts(m))
  ModelProperties(id(m),
                  returns?,
                  clears-registers?)
  
;============================================================
;================== Model Interpretation ====================
;============================================================

defn interpret-model (m:OperationModel) :
  val table = fatal("make table")
  for stmt in stmts(m) do :
    match(stmt) :
      (stmt:Require) :
        fatal("require")
      (stmt:Release) :
        fatal("release")
      (stmt:Return) :
        fatal("return")
      (stmt:ClearRegisters) :
        fatal("clear registers")
        