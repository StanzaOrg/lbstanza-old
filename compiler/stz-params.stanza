;See License.txt for details about licensing.

defpackage stz/params :
   import core
   import collections
   import core/parsed-path

;========= Compilation Flags ===========
val COMPILE-FLAGS = Vector<Symbol>()
public defn flag-defined? (s:Symbol) :
   contains?(COMPILE-FLAGS, s)
public defn add-flag (s:Symbol) :
   add(COMPILE-FLAGS, s)
public defn compiler-flags () :
  to-tuple(COMPILE-FLAGS)

;========= Stanza Configuration ========
public val STANZA-VERSION = [0 14 18]
public var STANZA-INSTALL-DIR:String = ""
public var OUTPUT-PLATFORM:Symbol = `platform
public var STANZA-PKG-DIRS:List<String> = List()
public val STANZA-PROJ-FILES = Vector<String>()
public var EXPERIMENTAL:True|False = false

;====== Compiler Configuration =====
public var STANZA-MAX-COMPILER-HEAP-SIZE = 4L * 1024L * 1024L * 1024L

;======== Output Symbol Manging =========
public defn make-external-symbol (x:Symbol) :
  switch {OUTPUT-PLATFORM == _} :
    `os-x : symbol-join(["_", x])
    `linux : x
    `windows : x

;======== Platforms =========
public defn supported-platform? (p:Symbol) :
  contains?([`os-x, `linux, `windows], p)

public defn ensure-supported-platform (p:Symbol) :
  if not supported-platform?(p) :
    throw $ Exception("%_ is not a supported platform." % [p])

public defn platform-flag (platform:Symbol) -> Symbol :
  switch(platform) :
    `os-x : `PLATFORM-OS-X
    `linux : `PLATFORM-LINUX
    `windows : `PLATFORM-WINDOWS

;============================================================
;===================== System Files =========================
;============================================================

public defenum SystemFile :
  DotStanza
  StanzaCompiler
  StanzaLicense
  StanzaRuntimeDriver
  StanzaAuxFile
  StanzaPkgsDir

public defn system-filepath (install-dir:String, file:SystemFile) -> String :
  val install-path = parse-path(install-dir)
  val file-path = switch(file) :
    DotStanza : ".stanza"
    StanzaCompiler :
      match(CURRENT-PLATFORM) :
        (p:OS-X|Linux) : "stanza"
        (p:Windows) : "stanza.exe"
    StanzaLicense : "License.txt"
    StanzaRuntimeDriver : "runtime/driver.c"
    StanzaAuxFile : "stanza.aux"
    StanzaPkgsDir : "pkgs"
  to-string(relative-to-dir(install-path, file-path))
  
public defn system-filepath (file:SystemFile) -> String :
  system-filepath(STANZA-INSTALL-DIR, file)