defpackage stz/reg-alloc-engine :
  import core
  import collections
  import stz/reg-alloc-ir
  import stz/reg-alloc-block

;<doc>=======================================================
;====================== Algorithm ===========================
;============================================================


;============================================================
;=======================================================<doc>

;============================================================
;=================== State Definition =======================
;============================================================

;Holds the complete state of the register allocation engine.
public defstruct RegAllocEngine :
  num-regs:Int
  num-fregs:Int
  blocks:Vector<Block> with:
    init => Vector<Block>()
  models:Vector<OperationModel> with:
    init => Vector<OperationModel>()
  model-properties:Vector<ModelProperties> with:
    init => Vector<ModelProperties>()
with:
  constructor => #RegAllocEngine

;============================================================
;==================== Constructor ===========================
;============================================================

;Create a new Register Allocator engine.
public defn RegAllocEngine (num-regs:Int,
                            num-fregs:Int) -> RegAllocEngine :
  #RegAllocEngine(num-regs, num-fregs)

;============================================================
;====================== Adding Models =======================
;============================================================

public defn add (r:RegAllocEngine, m:OperationModel) -> False :
  false

;============================================================
;======================= Analysis ===========================
;============================================================

public defn analyze (r:RegAllocEngine, p:Program) -> False :
  false