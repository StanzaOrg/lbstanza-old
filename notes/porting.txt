======= Porting Concerns ==========

1. String Interpolation

   BEFORE: "My ~ is ~." << ["name", "Patrick"]

   AFTER: "My %_ is %_." % ["name", "Patrick"]
      %_ : Splice in
      %* : Splice seqable in
      %, : Splice seqable in with separating commas
      %~ : Splice pretty-printed version in
      %@ : Splice in pretty-printed sequence with separating spaces      
      %% : Escaped %

   BEFORE: "My ~ is ~." % ["name", "Patrick"]
   AFTER: to-string("My %_ is %_." % ["name", "Patrick"])   

3. Stream is now called Seq
   Streamable is now called Seqable
   stream is now called seq

4. streams no longer support more?(str)
   Now they support empty?(str)    

4. The verse package has been renamed to the collections package.

5. HashTable

   HashTable's with no arguments uses the default hashing function for objects of type Hashable.
   eg. HashTable<[Int,Int], String>()

6. list / List

   There is no longer a "list" function.

   List() creates an empty list.
   List(1) creates a 1-element list containing 1.
   List(1,2) creates a 2-element list containing 1 and 2.
   List(1,2,3) ...

   cons(1, `(1,2,3)) now prepends a single element to a tail list.
   cons(1, 2, `(1,2,3)) prepends two elements to a tail list.

7. map-append has been renamed to seq-append

8. "hash" is a general purpose hash function that can hash all Hashable things.

9. concat has been renamed to "cat"

10. definterface/defclass has been replaced with "deftype"

11. Gettable/Settable has been removed entirely.

13. lookup! has been changed to "lookup" (Check function signatures in core)

14. substring has been replaced with get operator

    e.g. val s = "Hello World"
         s[0] is the first character
         s[3 to 6] is the substring from index 3 to index 6 (exclusive)
         s[3 through 6] is the substring from index 3 to index 6 (inclusive)
         s[3 to false] is the substring from index 3 onwards.    

15. error has been renamed to "fatal". And it can take any object as its argument, not just strings.

16. NoFileInfo has been removed.

17. search has been replaced with first.

    There's a Maybe<T> type to indicate whether something exists.
    val x = None()   <-- this means nothing is there.
    val x = One(3)   <-- this means there's a 3 there.

    first: (f: T -> Maybe<S>, xs:Seqable<S>) -> Maybe<S>

18. == operator can only be called on things that subtype Equalable.
    There is *no* identity comparison operator.

20. FileInfo() has been removed.

21. The neg function has been renamed to negate. An additional macro form has been introduced.
    3 + (- 5)   <==>  3 + negate(5)
    Parenthesis are not optional!

22. Collection<T>
23. typeof/is
24. to-array<...>
25. to-vector<...>
