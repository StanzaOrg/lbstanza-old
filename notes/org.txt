There's a general question of where to put the definitions of each thing.

Consider a large algorithm, consisting of several datastructures and several steps. Which files do each of the steps go in?

C libraries handle this by separating their declaration from their implementation. The location of the declaration is what is important from the perspective of users. It is what needs to be imported, and is kept small. For instance, the entire interface for the opengl library can be included by including "opengl.h". The implementation is split up algorithm-by-algorithm.

Stanza does not allow for such a split, so it's a bit harder. So the re-export feature is similar in some sense to splitting implementation from declaration.

Maybe function definitions without bodies can be taken as declarations. What does an implementation look like then? Does it look like the same thing? def

defn f (x:Int, s:String) -> True|False

defmethod
