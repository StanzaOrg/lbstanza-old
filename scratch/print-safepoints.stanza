defpackage print-safepoints :
  import core
  import collections

val GLOBAL-A = "Hello world"
var GLOBAL-B:Int = 23
val GLOBAL-C = [23, "Hello"]
val GLOBAL-D = CharArray(3, 'A')
val GLOBAL-E = ByteArray(3, 5Y)
val GLOBAL-F = IntArray(3, 1)
val GLOBAL-G = Array<Int>(3, 1)
var GLOBAL-H:List = List(42, "Timon")
val GLOBAL-I = `core

defn test (i:Int) :
  println("=== test started %_ ===" % [i])
  val abc = i
  for j in 0 to 10 do :
    println("=== test iteration %_ ===" % [j])
  println("=== test finished %_ ===" % [i])

defn f0 (a:Int) :
  println("f0(%_)" % [a])
  f1(a + a)
  f1(a + a)
  println(a)

defn f1 (b:Int) :
  println("f1(%_)" % [b])
  f2(b + b)
  f2(b + b)
  println(b)

defn f2 (c:Int) :
  println("f2(%_)" % [c])
  print-stack-trace()
  println(c)

defn main () :
  f0(10)
  f0(11)
  println("=== Hello world ===")
  for i in 0 to 5 do :
    println("=== Iteration %_ ===" % [i])
    test(i)
    GLOBAL-B = GLOBAL-B * 10
    GLOBAL-H = cons(GLOBAL-B, GLOBAL-H)
  println("=== FINISHED ===")

main()
