analyze-block test01 :
  BlockStmts :
    inputs : ()
    instructions :
      (V0, V1, V2) = op0()
      op1(V1, V2)
      branch (L1, L2)
    outputs :
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)), pref-reg:R2)
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test01 except:
;  V0 prefers to be saved.
analyze-block test02 :
  BlockStmts :
    inputs : ()
    instructions :
      (V0, V1, V2) = op0()
      op1(V1, V2)
      branch (L1, L2)
    outputs :
      port 0 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)), pref-reg:R2)
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test02 except:
;  V1 prefers to be unloaded.
analyze-block test03 :
  BlockStmts :
    inputs : ()
    instructions :
      (V0, V1, V2) = op0()
      op1(V1, V2)
      branch (L1, L2)
    outputs :
      port 0 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)), pref-reg:R2)
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferNoLoad))

;Start with too many variables being loaded.
analyze-block test04 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions : ()
    outputs : 
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Take test04, and see what if V0,V1 are already saved.
analyze-block test05 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions : ()
    outputs : 
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Ensure that registers are loaded properly into the arguments.
;Should see V6,V7 spilled because they are farthest used, and then
;loaded back before processing.
analyze-block test06 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 6, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      op2(V0, V1)
      op2(V1, V2)
      op2(V2, V3)
      op2(V3, V4)
      op2(V4, V5)
      op2(V5, V6)
      op2(V6, V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test06 except that we occasionally use op3 which uses three temporary
;variables.
analyze-block test07 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 6, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      op2(V0, V1)
      op2(V1, V2)
      op3(V2, V3)
      op3(V3, V4)
      op2(V4, V5)
      op2(V5, V6)
      op3(V6, V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test07 except that we do not require on output.
analyze-block test08 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 6, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      op2(V0, V1)
      op2(V1, V2)
      op3(V2, V3)
      op3(V3, V4)
      op2(V4, V5)
      op2(V5, V6)
      op3(V6, V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Reusing the same two registers over and over again.
analyze-block test09 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)

      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)

      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

model (V0, V1, V2) = op0() :
  assign Rx to V0
  assign Rx to V1
  assign Rx to V2

model op1(V0:R4, V1:R3) : ()

model op2(V0:Rx, V1:Rx) : ()

model op3(V0:Rx, V1:Rx) (temp V2, V3, V4) :
  release V0
  release V1
  assign Rx to V2
  assign Rx to V3
  assign Rx to V4

model (V0, V1) = op4(V2:Rx, V3:Rx) :
  release V2
  release V3
  assign Rx to V0
  assign Rx to V1
