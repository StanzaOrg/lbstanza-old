analyze-block test01 :
  BlockStmts :
    vars:
      V0:Rx
      V1:Rx
      V2:Rx
    inputs : ()
    instructions :
      (V0, V1, V2) = op0()
      op1(V1, V2)
      branch (L1, L2)
    outputs :
      port V0 (usage-position: 3, PortPref(NoPreferSave, NoPreferUnload, reg-pref:R2))
      port V1 (usage-position: 3, PortPref(NoPreferSave, NoPreferUnload))

;<comment>
;Like test01 except:
;  V0 prefers to be saved.
analyze-block test02 :
  BlockStmts :
    inputs : ()
    instructions :
      (V0, V1, V2) = op0()
      op1(V1, V2)
      branch (L1, L2)
    outputs :
      port 0 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)), pref-reg:R2)
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test02 except:
;  V1 prefers to be unloaded.
analyze-block test03 :
  BlockStmts :
    inputs : ()
    instructions :
      (V0, V1, V2) = op0()
      op1(V1, V2)
      branch (L1, L2)
    outputs :
      port 0 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)), pref-reg:R2)
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferNoLoad))

;Start with too many variables being loaded.
analyze-block test04 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions : ()
    outputs : 
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Take test04, and see what if V0,V1 are already saved.
analyze-block test05 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions : ()
    outputs : 
      port 0 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))

;Ensure that registers are loaded properly into the arguments.
;Should see V6,V7 spilled because they are farthest used, and then
;loaded back before processing.
analyze-block test06 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 6, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      op2(V0, V1)
      op2(V1, V2)
      op2(V2, V3)
      op2(V3, V4)
      op2(V4, V5)
      op2(V5, V6)
      op2(V6, V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test06 except that we occasionally use op3 which uses three temporary
;variables.
analyze-block test07 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 6, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      op2(V0, V1)
      op2(V1, V2)
      op3(V2, V3)
      op3(V3, V4)
      op2(V4, V5)
      op2(V5, V6)
      op3(V6, V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test07 except that we do not require on output.
analyze-block test08 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 6, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      op2(V0, V1)
      op2(V1, V2)
      op3(V2, V3)
      op3(V3, V4)
      op2(V4, V5)
      op2(V5, V6)
      op3(V6, V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 6 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Reusing the same two registers over and over again.
analyze-block test09 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)

      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)

      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test09 but with a clear-register in the middle.
analyze-block test10 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)

      (V0, V1) = op4(V0, V1)
      (V2, V3) = op5(V2, V3)
      (V4, V5) = op4(V4, V5)

      (V0, V1) = op4(V0, V1)
      (V2, V3) = op4(V2, V3)
      (V4, V5) = op4(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test09 but uses op6 instead of op4. op6 only releases one of its
;argument registers.
analyze-block test11 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op6(V0, V1)
      (V2, V3) = op6(V2, V3)
      (V4, V5) = op6(V4, V5)

      (V0, V1) = op6(V0, V1)
      (V2, V3) = op6(V2, V3)
      (V4, V5) = op6(V4, V5)

      (V0, V1) = op6(V0, V1)
      (V2, V3) = op6(V2, V3)
      (V4, V5) = op6(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Try out an op that requires 2 temporaries, but releases the arguments
;more assigning them.
analyze-block test12 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op7(V0, V1)
      (V2, V3) = op7(V2, V3)
      (V4, V5) = op7(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Try out an op that requires 4 temporaries, but releases each one
;before assigning the next.
analyze-block test13 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op8(V0, V1)
      (V2, V3) = op8(V2, V3)
      (V4, V5) = op8(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Try out an op that requires a Rx, Fx, and returns a Fx, Rx.
analyze-block test14 :
  BlockStmts :
    inputs :
      port 2 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 7 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 8 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0,V1) = op9(V2,V3)
      (V4,V2) = op9(V2,V0)
      (V4,V2) = op9(V2,V4)
      (V6,V9) = op9(V8,V5)
      (V3,V8) = op9(V9,V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Like test14 by clear the registers in the middle.
analyze-block test15 :
  BlockStmts :
    inputs :
      port 2 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 5 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 7 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 8 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0,V1) = op9(V2,V3)
      (V4,V2) = op9(V2,V0)
      (V4,V2) = op9(V2,V4)
      (V2,V8) = op5(V2,V8)
      (V6,V9) = op9(V8,V5)
      (V3,V8) = op9(V9,V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Fx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))

;Try specific registers. 
analyze-block test16 :
  BlockStmts :
    inputs :
      port 1 (usage-position: 10, PortPref(PreferSave, PreferNoLoad))
      port 2 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 8 (usage-position: 3, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 4, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 7 (usage-position: 5, PortPref(PreferNoSave, PreferLoad(Rx)))

    instructions :
      (V0) = op10(V2,V3)
      (V4) = op10(V2,V0)
      (V2) = op10(V2,V4)
      (V0,V8) = op5(V2,V8)
      (V6) = op10(V8,V5)
      (V3) = op10(V6,V7)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferLoad(Rx)), pref-reg:R5)

;All of the outputs prefer no save, and also prefer no load.
analyze-block test17 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0, V1) = op8(V0, V1)
      (V2, V3) = op8(V2, V3)
      (V4, V5) = op8(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))

;Like test17 but with a preferred register on input.
analyze-block test18 :
  BlockStmts :
    inputs :
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 2 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 3 (usage-position: 1, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 4 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 5 (usage-position: 2, PortPref(PreferNoSave, PreferLoad(Rx)))
    instructions :
      (V0) = op10(V0, V1)
      (V3) = op10(V2, V3)
      (V5) = op10(V4, V5)
    outputs : 
      port 0 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 1 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 2 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 3 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 4 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))
      port 5 (usage-position: 10, PortPref(PreferNoSave, PreferNoLoad))

;Simple test to force assignment.
analyze-block test19 :
  BlockStmts :
    inputs:
      port 0 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      port 1 (usage-position: 0, PortPref(PreferNoSave, PreferLoad(Rx)))
      
    instructions:
      (V0) = op11(V0, V1)
      (V1) = op11(V0, V1)
      (V2) = op11(V0, V1)
      (V3) = op11(V0, V1)
      (V4) = op11(V0, V1)
      (V5) = op11(V2, V3)
      (V6) = op11(V2, V4)
      (V7) = op11(V6, V5)
      (V7) = op11(V6, V4)
      (V7) = op11(V6, V3)
      (V7) = op11(V6, V2)
      (V0) = op11(V7, V2)
      
    outputs:
      port 7 (usage-position: 50, PortPref(PreferSave, PreferNoLoad))
      port 4 (usage-position: 50, PortPref(PreferSave, PreferLoad(Rx)))
      port 2 (usage-position: 50, PortPref(PreferSave, PreferLoad(Rx)))
;<comment>

model (V0:Rx, V1:Rx, V2:Rx) = op0() :
  assign V0
  assign V1
  assign V2

model op1(V0:R4, V1:R3) :
  release V0
  release V1

;<comment>



model op2(V0:Rx, V1:Rx) : ()

model op3(V0:Rx, V1:Rx) (temp V2, V3, V4) :
  release V0
  release V1
  assign Rx to V2
  assign Rx to V3
  assign Rx to V4

model (V0, V1) = op4(V2:Rx, V3:Rx) :
  release V2
  release V3
  assign Rx to V0
  assign Rx to V1

model (V0, V1) = op5(V2:Rx, V3:Rx) :
  release V2
  release V3
  clear-registers
  assign Rx to V0
  assign Rx to V1  

model (V0, V1) = op6(V2:Rx, V3:Rx) :
  release V2
  assign Rx to V0
  assign Rx to V1

model (V0, V1) = op7(V2:Rx, V3:Rx) (temp V4, V5) :
  release V2
  release V3
  assign Rx to V4
  assign Rx to V5
  release V4
  release V5
  assign Rx to V0
  assign Rx to V1

model (V0, V1) = op8(V2:Rx, V3:Rx) (temp V4, V5, V6, V7) :
  release V2
  release V3
  assign Rx to V4
  release V4
  assign Rx to V5
  release V5
  assign Rx to V6
  release V6
  assign Rx to V7
  release V7  
  assign Rx to V0
  assign Rx to V1

model (V0, V1) = op9(V2:Rx, V3:Fx) :
  release V2
  assign Fx to V0
  assign Rx to V1

model (V0) = op10(V1:Rx, V2:R2) :
  release V1
  release V2
  assign R1 to V0 prefer-same-as V1

model (V0) = op11(V1:Rx, V2:Rx) :
  release V1
  release V2
  assign Rx to V0


;<comment>
