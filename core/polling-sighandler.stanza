defpackage polling-sighandler :
  import core
  import collections

;============================================================
;=============== Externs in polling-sighandler.c ============
;============================================================

extern install_polling_sigint_handler: () -> long
extern restore_previous_sigint_handler: long -> int
extern poll_sigint_flag: () -> int

;============================================================
;========================= API ==============================
;============================================================

public lostanza deftype SignalHandler :
  value:long

public lostanza defn install-polling-sigint-handler () -> ref<SignalHandler> :
  val handle = call-c install_polling_sigint_handler()
  return new SignalHandler{handle}

public lostanza defn restore-previous-sigint-handler (h:ref<SignalHandler>) -> ref<False> :
  call-c restore_previous_sigint_handler(h.value)
  return false

public defn with-polling-sigint-handler<?T> (body:() -> ?T) -> T :
  var prev-handler:SignalHandler
  dynamic-wind(
    fn () : prev-handler = install-polling-sigint-handler()
    body
    fn () : restore-previous-sigint-handler(prev-handler))

public lostanza defn poll-sigint-flag () -> ref<True|False> :
  val flag = call-c poll_sigint_flag()
  if flag : return true
  else : return false