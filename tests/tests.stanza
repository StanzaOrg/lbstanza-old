defpackage user :
   import core
   import collections
   import stz/algorithms

defn main () :
   val t = TinyTable<String>(10)
   t[1] = "Hello"
   t[3] = "World"
   t[5] = "Patrick"
   t[5] = "Sarah"

   for i in 0 to 10 do :
      match(key?(t, i)) :
         (k:Int) : println("Table[%_] = %~" % [i, t[k]])
         (k:False) : println("Table does not contain key %_" % [i])

   clear(t)

   for i in 0 to 10 do :
      match(key?(t, i)) :
         (k:Int) : println("Table[%_] = %~" % [i, t[k]])
         (k:False) : println("Table does not contain key %_" % [i])

   t[1] = "Hello"
   t[3] = "World"
   t[5] = "John"
   t[5] = "Wick"

   for i in 0 to 10 do :
      match(key?(t, i)) :
         (k:Int) : println("Table[%_] = %~" % [i, t[k]])
         (k:False) : println("Table does not contain key %_" % [i])

main()