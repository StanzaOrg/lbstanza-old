defpackage user :
   import core

defn parse (chars:Seqable<Char>) :
   val char-stream = to-seq(chars)
   defn* parse-word () :
      if not empty?(char-stream) :
         if letter?(peek(char-stream)) :
            println("Ate: %~" % [next(char-stream)])
            parse-word()
         else : fail()
      else : fail()

   defn* parse-number () :
      if not empty?(char-stream) :
         if digit?(peek(char-stream)) :
            println("Ate digit: %~" % [next(char-stream)])
            parse-number()
         else : fail()
      else : fail()

   defn* loop () :
      attempt :
         parse-word()
         loop()
      else :
         attempt :
            parse-number()
            loop()
      
   loop()      

parse("Here0012Word010Digit124")      

