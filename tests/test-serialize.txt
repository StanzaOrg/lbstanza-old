defserializer (out:FileOutputStream, in:FileInputStream) :
   defunion mystruct (MyStruct) :
      MyA : (a:int, b:int)
      MyB : (a:int, b:int, c:ints)
      MyC : (a:mystruct, b:mystruct)
   with :
      append-args => (false)

   reader defn read-list<?T> (f: () -> ?T) :
      val n = read-int()
      to-list(repeatedly(f, n))
      
   writer defn write-list<?T> (f: T -> False, xs:List<?T>) :
      put(out, length(xs))
      do(f, xs)

   defatom int (x:Int) :
      writer :
         put(out, x)
      reader :
         match(get-int(in)) :
            (i:Int) : i
            (i:False) : fatal("Unexpected end of file.")

   defatom ints (xs:List<Int>) :
      writer : write-list(write-int, xs)
      reader : read-list(read-int)
