defpackage user :
   import core
   import collections

defn main () :
   println(math/round(3.5))
   println(math/round(-3.5))
   
   ;val closure = [
   ;   1 => `(2 10 11)
   ;   2 => `(1 12)
   ;   3 => `(13 14)
   ;   4 => `(3 15 16)]
   ;val result:List<KeyValue<Int, List<Int>>> = bipartite-closure(closure)
   ;println(result)
   ;
   ;val edges = [
   ;   `a => `(b)
   ;   `b => `(e)
   ;   `c => `(d)
   ;   `d => `(e)
   ;   `e => `(c)
   ;   `f => `(g)
   ;   `g => `(h)
   ;   `h => `(f)
   ;   `i => `(f)]
   ;println(transitive-closure(edges))
   ;   
   ;;val t = HashTable<[Int,Int],String>()
   ;;for i in 1 through 9 do :
   ;;   for j in 1 through 9 do :
   ;;      val x = "%_ * %_ = %_" % [i, j, i * j]
   ;;      t[[i, j]] = to-string(x)
   ;;println(t)

main()
